---
name: "Automated Tests"

on:
    workflow_dispatch:
    push:
        paths:
            - ".github/workflows/automated-tests.yml"
            - ".github/actions/**"
            - "**.py"
            - "pyproject.toml"
            - "poetry.lock"
        branches:
            - main
    pull_request:
        types:
            - opened
            - reopened
            - synchronize
        paths:
            - ".github/workflows/automated-tests.yml"
            - ".github/actions/**"
            - "**.py"
            - "pyproject.toml"
            - "poetry.lock"

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test-python-code:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                python-version: ["3.10", "3.11", "3.12"]
        steps:
            - name: Harden Security Runner
              uses: step-security/harden-runner@v2
              with:
                  egress-policy: block
                  disable-sudo: true
                  allowed-endpoints: >
                      api.github.com:443
                      api.snapcraft.io:443
                      auth.docker.io:443
                      codecov.io:443
                      files.pythonhosted.org:443
                      github.com:443
                      install.python-poetry.org:443
                      production.cloudflare.docker.com:443
                      pypi.org:443
                      python-poetry.org:443
                      registry-1.docker.io:443
                      storage.googleapis.com:443
                      *.codecov.io:443

            # ----------------------------------------------
            #    Install python and checkout repository
            # ----------------------------------------------
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Checkout repository
              uses: actions/checkout@v4

            # ----------------------------------------------
            #    copy config file to runner
            # ----------------------------------------------
            - name: Create empty configuration file
              run: mkdir -p /home/runner/.config/halp && cp ./src/halper/default_config.toml /home/runner/.config/halp/config.toml

            # ----------------------------------------------
            #    Install poetry and project dependencies
            # ----------------------------------------------

            - name: Setup Python and Poetry
              uses: ./.github/actions/setup-poetry

            # ----------------------------------------------
            #    run linters
            # ----------------------------------------------

            - name: lint with ruff
              run: poetry run ruff --extend-ignore=I001,D401 src/
            - name: check pyproject.toml
              run: poetry run poetry check

            # ----------------------------------------------
            #    run test suite
            # ----------------------------------------------
            - name: Run tests with pytest
              run: |
                  poetry run coverage run
                  poetry run coverage report
                  poetry run coverage xml
            # ----------------------------------------------
            #             upload coverage stats
            # ----------------------------------------------
            - name: Upload coverage
              #   if: github.ref == 'refs/heads/main' && matrix.python-version == '3.11'
              if: matrix.python-version == '3.11'
              uses: codecov/codecov-action@v4
              with:
                  files: reports/coverage.xml
                  fail_ci_if_error: false
                  dry_run: true
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
